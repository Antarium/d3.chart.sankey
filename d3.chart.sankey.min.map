{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///d3.chart.sankey.min.js","webpack:///webpack/bootstrap fc8cb089e7ed066bb001","webpack:///./index.js","webpack:///./sankey.js","webpack:///external \"d3\"","webpack:///../~/d3-plugins-sankey/sankey.js","webpack:///./base.js","webpack:///external {\"root\":[\"d3\",\"chart\"],\"commonjs\":\"d3.chart\",\"commonjs2\":\"d3.chart\",\"amd\":\"d3.chart\"}","webpack:///./selection.js","webpack:///./path.js"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Sankey","Base","Selection","Path","d3","sankey","extend","initialize","hasTextLeft","node","x","chart","features","width","colorNodes","name","colorLinks","link","path","size","height","spread","iterations","nodeWidth","nodePadding","layers","links","base","append","classed","nodes","on","layer","dataBind","data","selectAll","insert","events","enter","e","trigger","merge","attr","style","d","Math","max","dy","sort","b","exit","remove","y","select","rgb","darker","text","transform","layout","_spreadNodes","relayout","_","arguments","length","draw","nodesByBreadth","nest","key","entries","map","values","forEach","sum","o","padding","y0","computeNodeLinks","sourceLinks","targetLinks","source","target","push","computeNodeValues","value","computeNodeBreadths","nextNodes","remainingNodes","dx","moveSinksRight","scaleNodeBreadths","kx","computeNodeDepths","initializeNodeDepth","ky","min","relaxLeftToRight","alpha","weightedSource","center","breadth","relaxRightToLeft","weightedTarget","slice","reverse","resolveCollisions","n","ascendingDepth","sortKeys","ascending","computeLinkDepths","ascendingSourceDepth","ascendingTargetDepth","sy","ty","x0","x1","xi","interpolateNumber","x2","curvature","x3","y1","Chart","parentNode","clientWidth","clientHeight","margins","top","right","bottom","left","scale","category20c","update","selection","indexOf","unselectedOpacity","updateTransition","transition","delay","apply","duration","Array","getConnections","direction","getConnectionsLink","getConnectionsNode","concat"],"mappings":"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","file":"d3.chart.sankey.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"), require(\"d3.chart\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\", \"d3.chart\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\"), require(\"d3.chart\")) : factory(root[\"d3\"], root[\"d3\"][\"chart\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","/*!\n * d3.chart.sankey - v0.2.0\n * License: MIT\n * Date: 2016-00-25\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"), require(\"d3.chart\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\", \"d3.chart\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\"), require(\"d3.chart\")) : factory(root[\"d3\"], root[\"d3\"][\"chart\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*jshint node: true */\n\t\n\tvar Sankey = __webpack_require__(1);\n\t\n\tSankey.Sankey = Sankey;\n\tSankey.Base = __webpack_require__(4);\n\tSankey.Selection = __webpack_require__(6);\n\tSankey.Path = __webpack_require__(7);\n\t\n\tmodule.exports = Sankey;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*jshint node: true */\n\t\n\tvar d3 = __webpack_require__(2);\n\t//var sankey = require('d3-plugins-sankey'); // @todo move loader to config and make it work\n\tvar sankey = __webpack_require__(3);\n\tvar Base = __webpack_require__(4);\n\t\n\tmodule.exports = Base.extend(\"Sankey\", {\n\t\n\t  initialize: function() {\n\t    var chart = this;\n\t\n\t    chart.d3.sankey = sankey();\n\t    chart.d3.path = chart.d3.sankey.link();\n\t    chart.d3.sankey.size([chart.features.width, chart.features.height]);\n\t\n\t    chart.features.spread = false;\n\t    chart.features.iterations = 32;\n\t    chart.features.nodeWidth = chart.d3.sankey.nodeWidth();\n\t    chart.features.nodePadding = chart.d3.sankey.nodePadding();\n\t\n\t    chart.layers.links = chart.layers.base.append(\"g\").classed(\"links\", true);\n\t    chart.layers.nodes = chart.layers.base.append(\"g\").classed(\"nodes\", true);\n\t\n\t\n\t    chart.on(\"change:sizes\", function() {\n\t      chart.d3.sankey.nodeWidth(chart.features.nodeWidth);\n\t      chart.d3.sankey.nodePadding(chart.features.nodePadding);\n\t    });\n\t\n\t    chart.layer(\"links\", chart.layers.links, {\n\t      dataBind: function(data) {\n\t        return this.selectAll(\".link\").data(data.links);\n\t      },\n\t\n\t      insert: function() {\n\t        return this.append(\"path\").classed(\"link\", true);\n\t      },\n\t\n\t      events: {\n\t        \"enter\": function() {\n\t          this.on(\"mouseover\", function(e) { chart.trigger(\"link:mouseover\", e); });\n\t          this.on(\"mouseout\",  function(e) { chart.trigger(\"link:mouseout\",  e); });\n\t          this.on(\"click\",     function(e) { chart.trigger(\"link:click\",     e); });\n\t        },\n\t\n\t        \"merge\": function() {\n\t          this\n\t            .attr(\"d\", chart.d3.path)\n\t            .style(\"stroke\", colorLinks)\n\t            .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n\t            .sort(function(a, b) { return b.dy - a.dy; });\n\t        },\n\t\n\t        \"exit\": function() {\n\t          this.remove();\n\t        }\n\t      }\n\t    });\n\t\n\t    chart.layer(\"nodes\", chart.layers.nodes, {\n\t      dataBind: function(data) {\n\t        return this.selectAll(\".node\").data(data.nodes);\n\t      },\n\t\n\t      insert: function() {\n\t        return this.append(\"g\").classed(\"node\", true);\n\t      },\n\t\n\t      events: {\n\t        \"enter\": function() {\n\t          this.append(\"rect\");\n\t          this.append(\"text\")\n\t            .attr(\"dy\", \".35em\")\n\t            .attr(\"transform\", null);\n\t\n\t          this.on(\"mouseover\", function(e) { chart.trigger(\"node:mouseover\", e); });\n\t          this.on(\"mouseout\",  function(e) { chart.trigger(\"node:mouseout\",  e); });\n\t          this.on(\"click\",     function(e) { chart.trigger(\"node:click\",     e); });\n\t        },\n\t\n\t        \"merge\": function() {\n\t          this.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\t\n\t          this.select(\"rect\")\n\t            .attr(\"height\", function(d) { return d.dy; })\n\t            .attr(\"width\", chart.features.nodeWidth)\n\t            .style(\"fill\", colorNodes)\n\t            .style(\"stroke\", function(d) { return d3.rgb(colorNodes(d)).darker(2); });\n\t\n\t          this.select(\"text\")\n\t            .text(chart.features.name)\n\t            .attr(\"y\", function(d) { return d.dy / 2; })\n\t            .attr(\"x\", function(d) { return hasTextLeft(d) ? (6 + chart.features.nodeWidth) : -6; })\n\t            .attr(\"text-anchor\", function(d) { return hasTextLeft(d) ? \"start\" : \"end\"; });\n\t        },\n\t\n\t        \"exit\": function() {\n\t          this.remove();\n\t        }\n\t      }\n\t    });\n\t\n\t    function hasTextLeft(node) {\n\t      return node.x < chart.features.width / 2;\n\t    }\n\t\n\t    function colorNodes(node) {\n\t      if (typeof chart.features.colorNodes === 'function') {\n\t        // allow using d3 scales, but also custom function with node as 2nd argument\n\t        return chart.features.colorNodes(chart.features.name(node), node);\n\t      } else {\n\t        return chart.features.colorNodes;\n\t      }\n\t    }\n\t\n\t    function colorLinks(link) {\n\t      if (typeof chart.features.colorLinks === 'function') {\n\t        // always expect custom function, there's no sensible default with d3 scales here\n\t        return chart.features.colorLinks(link);\n\t      } else {\n\t        return chart.features.colorLinks;\n\t      }\n\t    }\n\t  },\n\t\n\t\n\t  transform: function(data) {\n\t    var chart = this;\n\t\n\t    chart.data = data;\n\t\n\t    chart.d3.sankey\n\t      .nodes(data.nodes)\n\t      .links(data.links)\n\t      .layout(chart.features.iterations);\n\t\n\t    if (this.features.spread) {\n\t      this._spreadNodes(data);\n\t      chart.d3.sankey.relayout();\n\t    }\n\t\n\t    return data;\n\t  },\n\t\n\t\n\t  iterations: function(_) {\n\t    if (!arguments.length) { return this.features.iterations; }\n\t    this.features.iterations = _;\n\t\n\t    if (this.data) { this.draw(this.data); }\n\t\n\t    return this;\n\t  },\n\t\n\t\n\t  nodeWidth: function(_) {\n\t    if (!arguments.length) { return this.features.nodeWidth; }\n\t    this.features.nodeWidth = _;\n\t\n\t    this.trigger(\"change:sizes\");\n\t    if (this.data) { this.draw(this.data); }\n\t\n\t    return this;\n\t  },\n\t\n\t\n\t  nodePadding: function(_) {\n\t    if (!arguments.length) { return this.features.nodePadding; }\n\t    this.features.nodePadding = _;\n\t\n\t    this.trigger(\"change:sizes\");\n\t    if (this.data) { this.draw(this.data); }\n\t\n\t    return this;\n\t  },\n\t\n\t\n\t  spread: function(_) {\n\t    if (!arguments.length) { return this.features.spread; }\n\t    this.features.spread = _;\n\t\n\t    if (this.data) { this.draw(this.data); }\n\t\n\t    return this;\n\t  },\n\t\n\t\n\t  _spreadNodes: function(data) {\n\t    var chart = this,\n\t        nodesByBreadth = d3.nest()\n\t        .key(function(d) { return d.x; })\n\t        .entries(data.nodes)\n\t        .map(function(d) { return d.values; });\n\t\n\t    nodesByBreadth.forEach(function(nodes) {\n\t      var i,\n\t          node,\n\t          sum = d3.sum(nodes, function(o) { return o.dy; }),\n\t          padding = (chart.features.height - sum) / nodes.length,\n\t          y0 = 0;\n\t      nodes.sort(function(a, b) { return a.y - b.y; });\n\t      for (i = 0; i < nodes.length; ++i) {\n\t        node = nodes[i];\n\t        node.y = y0;\n\t        y0 += node.dy + padding;\n\t      }\n\t    });\n\t  }\n\t\n\t});\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*** IMPORTS FROM imports-loader ***/\n\tvar d3 = __webpack_require__(2);\n\t\n\td3.sankey = function() {\n\t  var sankey = {},\n\t      nodeWidth = 24,\n\t      nodePadding = 8,\n\t      size = [1, 1],\n\t      nodes = [],\n\t      links = [];\n\t\n\t  sankey.nodeWidth = function(_) {\n\t    if (!arguments.length) return nodeWidth;\n\t    nodeWidth = +_;\n\t    return sankey;\n\t  };\n\t\n\t  sankey.nodePadding = function(_) {\n\t    if (!arguments.length) return nodePadding;\n\t    nodePadding = +_;\n\t    return sankey;\n\t  };\n\t\n\t  sankey.nodes = function(_) {\n\t    if (!arguments.length) return nodes;\n\t    nodes = _;\n\t    return sankey;\n\t  };\n\t\n\t  sankey.links = function(_) {\n\t    if (!arguments.length) return links;\n\t    links = _;\n\t    return sankey;\n\t  };\n\t\n\t  sankey.size = function(_) {\n\t    if (!arguments.length) return size;\n\t    size = _;\n\t    return sankey;\n\t  };\n\t\n\t  sankey.layout = function(iterations) {\n\t    computeNodeLinks();\n\t    computeNodeValues();\n\t    computeNodeBreadths();\n\t    computeNodeDepths(iterations);\n\t    computeLinkDepths();\n\t    return sankey;\n\t  };\n\t\n\t  sankey.relayout = function() {\n\t    computeLinkDepths();\n\t    return sankey;\n\t  };\n\t\n\t  sankey.link = function() {\n\t    var curvature = .5;\n\t\n\t    function link(d) {\n\t      var x0 = d.source.x + d.source.dx,\n\t          x1 = d.target.x,\n\t          xi = d3.interpolateNumber(x0, x1),\n\t          x2 = xi(curvature),\n\t          x3 = xi(1 - curvature),\n\t          y0 = d.source.y + d.sy + d.dy / 2,\n\t          y1 = d.target.y + d.ty + d.dy / 2;\n\t      return \"M\" + x0 + \",\" + y0\n\t           + \"C\" + x2 + \",\" + y0\n\t           + \" \" + x3 + \",\" + y1\n\t           + \" \" + x1 + \",\" + y1;\n\t    }\n\t\n\t    link.curvature = function(_) {\n\t      if (!arguments.length) return curvature;\n\t      curvature = +_;\n\t      return link;\n\t    };\n\t\n\t    return link;\n\t  };\n\t\n\t  // Populate the sourceLinks and targetLinks for each node.\n\t  // Also, if the source and target are not objects, assume they are indices.\n\t  function computeNodeLinks() {\n\t    nodes.forEach(function(node) {\n\t      node.sourceLinks = [];\n\t      node.targetLinks = [];\n\t    });\n\t    links.forEach(function(link) {\n\t      var source = link.source,\n\t          target = link.target;\n\t      if (typeof source === \"number\") source = link.source = nodes[link.source];\n\t      if (typeof target === \"number\") target = link.target = nodes[link.target];\n\t      source.sourceLinks.push(link);\n\t      target.targetLinks.push(link);\n\t    });\n\t  }\n\t\n\t  // Compute the value (size) of each node by summing the associated links.\n\t  function computeNodeValues() {\n\t    nodes.forEach(function(node) {\n\t      node.value = Math.max(\n\t        d3.sum(node.sourceLinks, value),\n\t        d3.sum(node.targetLinks, value)\n\t      );\n\t    });\n\t  }\n\t\n\t  // Iteratively assign the breadth (x-position) for each node.\n\t  // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n\t  // nodes with no incoming links are assigned breadth zero, while\n\t  // nodes with no outgoing links are assigned the maximum breadth.\n\t  function computeNodeBreadths() {\n\t    var remainingNodes = nodes,\n\t        nextNodes,\n\t        x = 0;\n\t\n\t    while (remainingNodes.length) {\n\t      nextNodes = [];\n\t      remainingNodes.forEach(function(node) {\n\t        node.x = x;\n\t        node.dx = nodeWidth;\n\t        node.sourceLinks.forEach(function(link) {\n\t          nextNodes.push(link.target);\n\t        });\n\t      });\n\t      remainingNodes = nextNodes;\n\t      ++x;\n\t    }\n\t\n\t    //\n\t    moveSinksRight(x);\n\t    scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n\t  }\n\t\n\t  function moveSourcesRight() {\n\t    nodes.forEach(function(node) {\n\t      if (!node.targetLinks.length) {\n\t        node.x = d3.min(node.sourceLinks, function(d) { return d.target.x; }) - 1;\n\t      }\n\t    });\n\t  }\n\t\n\t  function moveSinksRight(x) {\n\t    nodes.forEach(function(node) {\n\t      if (!node.sourceLinks.length) {\n\t        node.x = x - 1;\n\t      }\n\t    });\n\t  }\n\t\n\t  function scaleNodeBreadths(kx) {\n\t    nodes.forEach(function(node) {\n\t      node.x *= kx;\n\t    });\n\t  }\n\t\n\t  function computeNodeDepths(iterations) {\n\t    var nodesByBreadth = d3.nest()\n\t        .key(function(d) { return d.x; })\n\t        .sortKeys(d3.ascending)\n\t        .entries(nodes)\n\t        .map(function(d) { return d.values; });\n\t\n\t    //\n\t    initializeNodeDepth();\n\t    resolveCollisions();\n\t    for (var alpha = 1; iterations > 0; --iterations) {\n\t      relaxRightToLeft(alpha *= .99);\n\t      resolveCollisions();\n\t      relaxLeftToRight(alpha);\n\t      resolveCollisions();\n\t    }\n\t\n\t    function initializeNodeDepth() {\n\t      var ky = d3.min(nodesByBreadth, function(nodes) {\n\t        return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n\t      });\n\t\n\t      nodesByBreadth.forEach(function(nodes) {\n\t        nodes.forEach(function(node, i) {\n\t          node.y = i;\n\t          node.dy = node.value * ky;\n\t        });\n\t      });\n\t\n\t      links.forEach(function(link) {\n\t        link.dy = link.value * ky;\n\t      });\n\t    }\n\t\n\t    function relaxLeftToRight(alpha) {\n\t      nodesByBreadth.forEach(function(nodes, breadth) {\n\t        nodes.forEach(function(node) {\n\t          if (node.targetLinks.length) {\n\t            var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n\t            node.y += (y - center(node)) * alpha;\n\t          }\n\t        });\n\t      });\n\t\n\t      function weightedSource(link) {\n\t        return center(link.source) * link.value;\n\t      }\n\t    }\n\t\n\t    function relaxRightToLeft(alpha) {\n\t      nodesByBreadth.slice().reverse().forEach(function(nodes) {\n\t        nodes.forEach(function(node) {\n\t          if (node.sourceLinks.length) {\n\t            var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n\t            node.y += (y - center(node)) * alpha;\n\t          }\n\t        });\n\t      });\n\t\n\t      function weightedTarget(link) {\n\t        return center(link.target) * link.value;\n\t      }\n\t    }\n\t\n\t    function resolveCollisions() {\n\t      nodesByBreadth.forEach(function(nodes) {\n\t        var node,\n\t            dy,\n\t            y0 = 0,\n\t            n = nodes.length,\n\t            i;\n\t\n\t        // Push any overlapping nodes down.\n\t        nodes.sort(ascendingDepth);\n\t        for (i = 0; i < n; ++i) {\n\t          node = nodes[i];\n\t          dy = y0 - node.y;\n\t          if (dy > 0) node.y += dy;\n\t          y0 = node.y + node.dy + nodePadding;\n\t        }\n\t\n\t        // If the bottommost node goes outside the bounds, push it back up.\n\t        dy = y0 - nodePadding - size[1];\n\t        if (dy > 0) {\n\t          y0 = node.y -= dy;\n\t\n\t          // Push any overlapping nodes back up.\n\t          for (i = n - 2; i >= 0; --i) {\n\t            node = nodes[i];\n\t            dy = node.y + node.dy + nodePadding - y0;\n\t            if (dy > 0) node.y -= dy;\n\t            y0 = node.y;\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    function ascendingDepth(a, b) {\n\t      return a.y - b.y;\n\t    }\n\t  }\n\t\n\t  function computeLinkDepths() {\n\t    nodes.forEach(function(node) {\n\t      node.sourceLinks.sort(ascendingTargetDepth);\n\t      node.targetLinks.sort(ascendingSourceDepth);\n\t    });\n\t    nodes.forEach(function(node) {\n\t      var sy = 0, ty = 0;\n\t      node.sourceLinks.forEach(function(link) {\n\t        link.sy = sy;\n\t        sy += link.dy;\n\t      });\n\t      node.targetLinks.forEach(function(link) {\n\t        link.ty = ty;\n\t        ty += link.dy;\n\t      });\n\t    });\n\t\n\t    function ascendingSourceDepth(a, b) {\n\t      return a.source.y - b.source.y;\n\t    }\n\t\n\t    function ascendingTargetDepth(a, b) {\n\t      return a.target.y - b.target.y;\n\t    }\n\t  }\n\t\n\t  function center(node) {\n\t    return node.y + node.dy / 2;\n\t  }\n\t\n\t  function value(link) {\n\t    return link.value;\n\t  }\n\t\n\t  return sankey;\n\t};\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = d3.sankey\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*jshint node: true */\n\t\n\tvar d3 = __webpack_require__(2);\n\tvar Chart = __webpack_require__(5);\n\t\n\t/*jshint newcap: false */\n\tmodule.exports = Chart(\"Sankey.Base\", {\n\t\n\t  initialize: function() {\n\t    var chart = this;\n\t\n\t    // Inspired by d3.chart.layout.hierarchy's hierarchy.js, though also different\n\t    chart.features  = {};\n\t    chart.d3        = {};\n\t    chart.layers    = {};\n\t\n\t    // when using faux-dom, be sure to set the width and height attributes\n\t    if (!chart.base.attr(\"width\"))  { chart.base.attr(\"width\",  chart.base.node().parentNode.clientWidth);  }\n\t    if (!chart.base.attr(\"height\")) { chart.base.attr(\"height\", chart.base.node().parentNode.clientHeight); }\n\t\n\t    // dimensions, with space for node stroke and labels (smallest at bottom)\n\t    chart.features.margins = {top: 1, right: 1, bottom: 6, left: 1};\n\t    chart.features.width   = chart.base.attr(\"width\") - chart.features.margins.left - chart.features.margins.right;\n\t    chart.features.height  = chart.base.attr(\"height\") - chart.features.margins.top - chart.features.margins.bottom;\n\t\n\t    chart.features.name    = function(d) { return d.name; };\n\t    // there is no value property, because we also need to set it on parents\n\t    chart.features.colorNodes = d3.scale.category20c();\n\t    chart.features.colorLinks = null; // css styles by default\n\t\n\t    chart.layers.base = chart.base.append(\"g\")\n\t      .attr(\"transform\", \"translate(\" + chart.features.margins.left + \",\" + chart.features.margins.top + \")\");\n\t  },\n\t\n\t\n\t  name: function(_) {\n\t    if (!arguments.length) { return this.features.name; }\n\t    this.features.name = _;\n\t\n\t    this.trigger(\"change:name\");\n\t    if (this.root) { this.draw(this.root); }\n\t\n\t    return this;\n\t  },\n\t\n\t\n\t  colorNodes: function(_) {\n\t    if (!arguments.length) { return this.features.colorNodes; }\n\t    this.features.colorNodes = _;\n\t\n\t    this.trigger(\"change:color\");\n\t    if (this.root) { this.draw(this.root); }\n\t\n\t    return this;\n\t  },\n\t\n\t\n\t  colorLinks: function(_) {\n\t    if (!arguments.length) { return this.features.colorLinks; }\n\t    this.features.colorLinks = _;\n\t\n\t    this.trigger(\"change:color\");\n\t    if (this.data) { this.draw(this.data); }\n\t\n\t    return this;\n\t  }\n\t\n\t});\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*jshint node: true */\n\t\n\tvar Sankey = __webpack_require__(1);\n\t\n\t// Sankey diagram with a hoverable selection\n\tmodule.exports = Sankey.extend(\"Sankey.Selection\", {\n\t\n\t  initialize: function() {\n\t    var chart = this;\n\t\n\t    chart.features.selection = null;\n\t    chart.features.unselectedOpacity = 0.2;\n\t\n\t    chart.on(\"link:mouseover\", chart.selection);\n\t    chart.on(\"link:mouseout\", function() { chart.selection(null); });\n\t    chart.on(\"node:mouseover\", chart.selection);\n\t    chart.on(\"node:mouseout\", function() { chart.selection(null); });\n\t\n\t    // going through the whole draw cycle can be a little slow, so we use\n\t    // a selection changed event to update existing nodes directly\n\t    chart.on(\"change:selection\", updateTransition);\n\t    this.layer(\"links\").on(\"enter\", update);\n\t    this.layer(\"nodes\").on(\"enter\", update);\n\t\n\t    function update() {\n\t      /*jshint validthis:true */\n\t      if (chart.features.selection && chart.features.selection.length) {\n\t        return this.style(\"opacity\", function(o) {\n\t          return chart.features.selection.indexOf(o) >= 0 ? 1 : chart.features.unselectedOpacity;\n\t        });\n\t      } else {\n\t        return this.style(\"opacity\", 1);\n\t      }\n\t    }\n\t\n\t    function updateTransition() {\n\t      var transition = chart.layers.base.selectAll('.node, .link').transition();\n\t      if (!chart.features.selection || !chart.features.selection.length) {\n\t        // short delay for the deselect transition to avoid flicker\n\t        transition = transition.delay(100);\n\t      }\n\t      update.apply(transition.duration(50));\n\t    }\n\t  },\n\t\n\t  selection: function(_) {\n\t    if (!arguments.length) { return this.features.selection; }\n\t    this.features.selection = (!_ || _ instanceof Array) ? _ : [_];\n\t\n\t    this.trigger(\"change:selection\");\n\t\n\t    return this;\n\t  },\n\t\n\t  unselectedOpacity: function(_) {\n\t    if (!arguments.length) { return this.features.unselectedOpacity; }\n\t    this.features.unselectedOpacity = _;\n\t\n\t    this.trigger(\"change:selection\");\n\t\n\t    return this;\n\t  }\n\t\n\t});\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*jshint node: true */\n\t\n\tvar Selection = __webpack_require__(6);\n\t\n\t// Sankey diagram with a path-hover effect\n\tmodule.exports = Selection.extend(\"Sankey.Path\", {\n\t\n\t  selection: function(_) {\n\t    var chart = this;\n\t\n\t    if (!arguments.length) { return chart.features.selection; }\n\t    chart.features.selection = (!_ || _ instanceof Array) ? _ : [_];\n\t\n\t    // expand selection with connections\n\t    if (chart.features.selection) {\n\t      chart.features.selection.forEach(function(o) {\n\t        getConnections(o).forEach(function(p) {\n\t          chart.features.selection.push(p);\n\t        });\n\t      });\n\t    }\n\t\n\t    chart.trigger(\"change:selection\");\n\t\n\t    return chart;\n\t  }\n\t\n\t});\n\t\n\tfunction getConnections(o, direction) {\n\t  if (o.source && o.target) {\n\t    return getConnectionsLink(o, direction);\n\t  } else {\n\t    return getConnectionsNode(o, direction);\n\t  }\n\t}\n\t\n\t// Return the link and its connected nodes with their links etc.\n\tfunction getConnectionsLink(o, direction) {\n\t  var links = [o];\n\t  direction = direction || 'both';\n\t\n\t  if (direction == 'source' || direction == 'both') {\n\t    links = links.concat(getConnectionsNode(o.source, 'source'));\n\t  }\n\t  if (direction == 'target' || direction == 'both') {\n\t    links = links.concat(getConnectionsNode(o.target, 'target'));\n\t  }\n\t\n\t  return links;\n\t}\n\t\n\t// Return the node and its connected links. If direction is 'both', just return\n\t// all links; if direction is 'source', only return the source link when there\n\t// is one target link (or none, in which case the node is an endnode); if\n\t// direction is 'target' vice versa. Open the product example to see why.\n\tfunction getConnectionsNode(o, direction) {\n\t  var links = [o];\n\t  direction = direction || 'both';\n\t\n\t  if ((direction == 'source' && o.sourceLinks.length < 2) || direction == 'both') {\n\t    o.targetLinks.forEach(function(p) { links = links.concat(getConnectionsLink(p, direction)); });\n\t  }\n\t  if ((direction == 'target' && o.targetLinks.length < 2) || direction == 'both') {\n\t    o.sourceLinks.forEach(function(p) { links = links.concat(getConnectionsLink(p, direction)); });\n\t  }\n\t\n\t  return links;\n\t}\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** d3.chart.sankey.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fc8cb089e7ed066bb001\n **/","\"use strict\";\n/*jshint node: true */\n\nvar Sankey = require('./sankey');\n\nSankey.Sankey = Sankey;\nSankey.Base = require('./base');\nSankey.Selection = require('./selection');\nSankey.Path = require('./path');\n\nmodule.exports = Sankey;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","\"use strict\";\n/*jshint node: true */\n\nvar d3 = require('d3');\n//var sankey = require('d3-plugins-sankey'); // @todo move loader to config and make it work\nvar sankey = require('imports?d3!exports?d3.sankey!d3-plugins-sankey');\nvar Base = require('./base');\n\nmodule.exports = Base.extend(\"Sankey\", {\n\n  initialize: function() {\n    var chart = this;\n\n    chart.d3.sankey = sankey();\n    chart.d3.path = chart.d3.sankey.link();\n    chart.d3.sankey.size([chart.features.width, chart.features.height]);\n\n    chart.features.spread = false;\n    chart.features.iterations = 32;\n    chart.features.nodeWidth = chart.d3.sankey.nodeWidth();\n    chart.features.nodePadding = chart.d3.sankey.nodePadding();\n\n    chart.layers.links = chart.layers.base.append(\"g\").classed(\"links\", true);\n    chart.layers.nodes = chart.layers.base.append(\"g\").classed(\"nodes\", true);\n\n\n    chart.on(\"change:sizes\", function() {\n      chart.d3.sankey.nodeWidth(chart.features.nodeWidth);\n      chart.d3.sankey.nodePadding(chart.features.nodePadding);\n    });\n\n    chart.layer(\"links\", chart.layers.links, {\n      dataBind: function(data) {\n        return this.selectAll(\".link\").data(data.links);\n      },\n\n      insert: function() {\n        return this.append(\"path\").classed(\"link\", true);\n      },\n\n      events: {\n        \"enter\": function() {\n          this.on(\"mouseover\", function(e) { chart.trigger(\"link:mouseover\", e); });\n          this.on(\"mouseout\",  function(e) { chart.trigger(\"link:mouseout\",  e); });\n          this.on(\"click\",     function(e) { chart.trigger(\"link:click\",     e); });\n        },\n\n        \"merge\": function() {\n          this\n            .attr(\"d\", chart.d3.path)\n            .style(\"stroke\", colorLinks)\n            .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n            .sort(function(a, b) { return b.dy - a.dy; });\n        },\n\n        \"exit\": function() {\n          this.remove();\n        }\n      }\n    });\n\n    chart.layer(\"nodes\", chart.layers.nodes, {\n      dataBind: function(data) {\n        return this.selectAll(\".node\").data(data.nodes);\n      },\n\n      insert: function() {\n        return this.append(\"g\").classed(\"node\", true);\n      },\n\n      events: {\n        \"enter\": function() {\n          this.append(\"rect\");\n          this.append(\"text\")\n            .attr(\"dy\", \".35em\")\n            .attr(\"transform\", null);\n\n          this.on(\"mouseover\", function(e) { chart.trigger(\"node:mouseover\", e); });\n          this.on(\"mouseout\",  function(e) { chart.trigger(\"node:mouseout\",  e); });\n          this.on(\"click\",     function(e) { chart.trigger(\"node:click\",     e); });\n        },\n\n        \"merge\": function() {\n          this.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n          this.select(\"rect\")\n            .attr(\"height\", function(d) { return d.dy; })\n            .attr(\"width\", chart.features.nodeWidth)\n            .style(\"fill\", colorNodes)\n            .style(\"stroke\", function(d) { return d3.rgb(colorNodes(d)).darker(2); });\n\n          this.select(\"text\")\n            .text(chart.features.name)\n            .attr(\"y\", function(d) { return d.dy / 2; })\n            .attr(\"x\", function(d) { return hasTextLeft(d) ? (6 + chart.features.nodeWidth) : -6; })\n            .attr(\"text-anchor\", function(d) { return hasTextLeft(d) ? \"start\" : \"end\"; });\n        },\n\n        \"exit\": function() {\n          this.remove();\n        }\n      }\n    });\n\n    function hasTextLeft(node) {\n      return node.x < chart.features.width / 2;\n    }\n\n    function colorNodes(node) {\n      if (typeof chart.features.colorNodes === 'function') {\n        // allow using d3 scales, but also custom function with node as 2nd argument\n        return chart.features.colorNodes(chart.features.name(node), node);\n      } else {\n        return chart.features.colorNodes;\n      }\n    }\n\n    function colorLinks(link) {\n      if (typeof chart.features.colorLinks === 'function') {\n        // always expect custom function, there's no sensible default with d3 scales here\n        return chart.features.colorLinks(link);\n      } else {\n        return chart.features.colorLinks;\n      }\n    }\n  },\n\n\n  transform: function(data) {\n    var chart = this;\n\n    chart.data = data;\n\n    chart.d3.sankey\n      .nodes(data.nodes)\n      .links(data.links)\n      .layout(chart.features.iterations);\n\n    if (this.features.spread) {\n      this._spreadNodes(data);\n      chart.d3.sankey.relayout();\n    }\n\n    return data;\n  },\n\n\n  iterations: function(_) {\n    if (!arguments.length) { return this.features.iterations; }\n    this.features.iterations = _;\n\n    if (this.data) { this.draw(this.data); }\n\n    return this;\n  },\n\n\n  nodeWidth: function(_) {\n    if (!arguments.length) { return this.features.nodeWidth; }\n    this.features.nodeWidth = _;\n\n    this.trigger(\"change:sizes\");\n    if (this.data) { this.draw(this.data); }\n\n    return this;\n  },\n\n\n  nodePadding: function(_) {\n    if (!arguments.length) { return this.features.nodePadding; }\n    this.features.nodePadding = _;\n\n    this.trigger(\"change:sizes\");\n    if (this.data) { this.draw(this.data); }\n\n    return this;\n  },\n\n\n  spread: function(_) {\n    if (!arguments.length) { return this.features.spread; }\n    this.features.spread = _;\n\n    if (this.data) { this.draw(this.data); }\n\n    return this;\n  },\n\n\n  _spreadNodes: function(data) {\n    var chart = this,\n        nodesByBreadth = d3.nest()\n        .key(function(d) { return d.x; })\n        .entries(data.nodes)\n        .map(function(d) { return d.values; });\n\n    nodesByBreadth.forEach(function(nodes) {\n      var i,\n          node,\n          sum = d3.sum(nodes, function(o) { return o.dy; }),\n          padding = (chart.features.height - sum) / nodes.length,\n          y0 = 0;\n      nodes.sort(function(a, b) { return a.y - b.y; });\n      for (i = 0; i < nodes.length; ++i) {\n        node = nodes[i];\n        node.y = y0;\n        y0 += node.dy + padding;\n      }\n    });\n  }\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./sankey.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 2\n ** module chunks = 0\n **/","/*** IMPORTS FROM imports-loader ***/\nvar d3 = require(\"d3\");\n\nd3.sankey = function() {\n  var sankey = {},\n      nodeWidth = 24,\n      nodePadding = 8,\n      size = [1, 1],\n      nodes = [],\n      links = [];\n\n  sankey.nodeWidth = function(_) {\n    if (!arguments.length) return nodeWidth;\n    nodeWidth = +_;\n    return sankey;\n  };\n\n  sankey.nodePadding = function(_) {\n    if (!arguments.length) return nodePadding;\n    nodePadding = +_;\n    return sankey;\n  };\n\n  sankey.nodes = function(_) {\n    if (!arguments.length) return nodes;\n    nodes = _;\n    return sankey;\n  };\n\n  sankey.links = function(_) {\n    if (!arguments.length) return links;\n    links = _;\n    return sankey;\n  };\n\n  sankey.size = function(_) {\n    if (!arguments.length) return size;\n    size = _;\n    return sankey;\n  };\n\n  sankey.layout = function(iterations) {\n    computeNodeLinks();\n    computeNodeValues();\n    computeNodeBreadths();\n    computeNodeDepths(iterations);\n    computeLinkDepths();\n    return sankey;\n  };\n\n  sankey.relayout = function() {\n    computeLinkDepths();\n    return sankey;\n  };\n\n  sankey.link = function() {\n    var curvature = .5;\n\n    function link(d) {\n      var x0 = d.source.x + d.source.dx,\n          x1 = d.target.x,\n          xi = d3.interpolateNumber(x0, x1),\n          x2 = xi(curvature),\n          x3 = xi(1 - curvature),\n          y0 = d.source.y + d.sy + d.dy / 2,\n          y1 = d.target.y + d.ty + d.dy / 2;\n      return \"M\" + x0 + \",\" + y0\n           + \"C\" + x2 + \",\" + y0\n           + \" \" + x3 + \",\" + y1\n           + \" \" + x1 + \",\" + y1;\n    }\n\n    link.curvature = function(_) {\n      if (!arguments.length) return curvature;\n      curvature = +_;\n      return link;\n    };\n\n    return link;\n  };\n\n  // Populate the sourceLinks and targetLinks for each node.\n  // Also, if the source and target are not objects, assume they are indices.\n  function computeNodeLinks() {\n    nodes.forEach(function(node) {\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    });\n    links.forEach(function(link) {\n      var source = link.source,\n          target = link.target;\n      if (typeof source === \"number\") source = link.source = nodes[link.source];\n      if (typeof target === \"number\") target = link.target = nodes[link.target];\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    });\n  }\n\n  // Compute the value (size) of each node by summing the associated links.\n  function computeNodeValues() {\n    nodes.forEach(function(node) {\n      node.value = Math.max(\n        d3.sum(node.sourceLinks, value),\n        d3.sum(node.targetLinks, value)\n      );\n    });\n  }\n\n  // Iteratively assign the breadth (x-position) for each node.\n  // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n  // nodes with no incoming links are assigned breadth zero, while\n  // nodes with no outgoing links are assigned the maximum breadth.\n  function computeNodeBreadths() {\n    var remainingNodes = nodes,\n        nextNodes,\n        x = 0;\n\n    while (remainingNodes.length) {\n      nextNodes = [];\n      remainingNodes.forEach(function(node) {\n        node.x = x;\n        node.dx = nodeWidth;\n        node.sourceLinks.forEach(function(link) {\n          nextNodes.push(link.target);\n        });\n      });\n      remainingNodes = nextNodes;\n      ++x;\n    }\n\n    //\n    moveSinksRight(x);\n    scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n  }\n\n  function moveSourcesRight() {\n    nodes.forEach(function(node) {\n      if (!node.targetLinks.length) {\n        node.x = d3.min(node.sourceLinks, function(d) { return d.target.x; }) - 1;\n      }\n    });\n  }\n\n  function moveSinksRight(x) {\n    nodes.forEach(function(node) {\n      if (!node.sourceLinks.length) {\n        node.x = x - 1;\n      }\n    });\n  }\n\n  function scaleNodeBreadths(kx) {\n    nodes.forEach(function(node) {\n      node.x *= kx;\n    });\n  }\n\n  function computeNodeDepths(iterations) {\n    var nodesByBreadth = d3.nest()\n        .key(function(d) { return d.x; })\n        .sortKeys(d3.ascending)\n        .entries(nodes)\n        .map(function(d) { return d.values; });\n\n    //\n    initializeNodeDepth();\n    resolveCollisions();\n    for (var alpha = 1; iterations > 0; --iterations) {\n      relaxRightToLeft(alpha *= .99);\n      resolveCollisions();\n      relaxLeftToRight(alpha);\n      resolveCollisions();\n    }\n\n    function initializeNodeDepth() {\n      var ky = d3.min(nodesByBreadth, function(nodes) {\n        return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n      });\n\n      nodesByBreadth.forEach(function(nodes) {\n        nodes.forEach(function(node, i) {\n          node.y = i;\n          node.dy = node.value * ky;\n        });\n      });\n\n      links.forEach(function(link) {\n        link.dy = link.value * ky;\n      });\n    }\n\n    function relaxLeftToRight(alpha) {\n      nodesByBreadth.forEach(function(nodes, breadth) {\n        nodes.forEach(function(node) {\n          if (node.targetLinks.length) {\n            var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n            node.y += (y - center(node)) * alpha;\n          }\n        });\n      });\n\n      function weightedSource(link) {\n        return center(link.source) * link.value;\n      }\n    }\n\n    function relaxRightToLeft(alpha) {\n      nodesByBreadth.slice().reverse().forEach(function(nodes) {\n        nodes.forEach(function(node) {\n          if (node.sourceLinks.length) {\n            var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n            node.y += (y - center(node)) * alpha;\n          }\n        });\n      });\n\n      function weightedTarget(link) {\n        return center(link.target) * link.value;\n      }\n    }\n\n    function resolveCollisions() {\n      nodesByBreadth.forEach(function(nodes) {\n        var node,\n            dy,\n            y0 = 0,\n            n = nodes.length,\n            i;\n\n        // Push any overlapping nodes down.\n        nodes.sort(ascendingDepth);\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          dy = y0 - node.y;\n          if (dy > 0) node.y += dy;\n          y0 = node.y + node.dy + nodePadding;\n        }\n\n        // If the bottommost node goes outside the bounds, push it back up.\n        dy = y0 - nodePadding - size[1];\n        if (dy > 0) {\n          y0 = node.y -= dy;\n\n          // Push any overlapping nodes back up.\n          for (i = n - 2; i >= 0; --i) {\n            node = nodes[i];\n            dy = node.y + node.dy + nodePadding - y0;\n            if (dy > 0) node.y -= dy;\n            y0 = node.y;\n          }\n        }\n      });\n    }\n\n    function ascendingDepth(a, b) {\n      return a.y - b.y;\n    }\n  }\n\n  function computeLinkDepths() {\n    nodes.forEach(function(node) {\n      node.sourceLinks.sort(ascendingTargetDepth);\n      node.targetLinks.sort(ascendingSourceDepth);\n    });\n    nodes.forEach(function(node) {\n      var sy = 0, ty = 0;\n      node.sourceLinks.forEach(function(link) {\n        link.sy = sy;\n        sy += link.dy;\n      });\n      node.targetLinks.forEach(function(link) {\n        link.ty = ty;\n        ty += link.dy;\n      });\n    });\n\n    function ascendingSourceDepth(a, b) {\n      return a.source.y - b.source.y;\n    }\n\n    function ascendingTargetDepth(a, b) {\n      return a.target.y - b.target.y;\n    }\n  }\n\n  function center(node) {\n    return node.y + node.dy / 2;\n  }\n\n  function value(link) {\n    return link.value;\n  }\n\n  return sankey;\n};\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = d3.sankey\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/imports-loader?d3!../~/exports-loader?d3.sankey!../~/d3-plugins-sankey/sankey.js\n ** module id = 3\n ** module chunks = 0\n **/","\"use strict\";\n/*jshint node: true */\n\nvar d3 = require('d3');\nvar Chart = require('d3.chart');\n\n/*jshint newcap: false */\nmodule.exports = Chart(\"Sankey.Base\", {\n\n  initialize: function() {\n    var chart = this;\n\n    // Inspired by d3.chart.layout.hierarchy's hierarchy.js, though also different\n    chart.features  = {};\n    chart.d3        = {};\n    chart.layers    = {};\n\n    // when using faux-dom, be sure to set the width and height attributes\n    if (!chart.base.attr(\"width\"))  { chart.base.attr(\"width\",  chart.base.node().parentNode.clientWidth);  }\n    if (!chart.base.attr(\"height\")) { chart.base.attr(\"height\", chart.base.node().parentNode.clientHeight); }\n\n    // dimensions, with space for node stroke and labels (smallest at bottom)\n    chart.features.margins = {top: 1, right: 1, bottom: 6, left: 1};\n    chart.features.width   = chart.base.attr(\"width\") - chart.features.margins.left - chart.features.margins.right;\n    chart.features.height  = chart.base.attr(\"height\") - chart.features.margins.top - chart.features.margins.bottom;\n\n    chart.features.name    = function(d) { return d.name; };\n    // there is no value property, because we also need to set it on parents\n    chart.features.colorNodes = d3.scale.category20c();\n    chart.features.colorLinks = null; // css styles by default\n\n    chart.layers.base = chart.base.append(\"g\")\n      .attr(\"transform\", \"translate(\" + chart.features.margins.left + \",\" + chart.features.margins.top + \")\");\n  },\n\n\n  name: function(_) {\n    if (!arguments.length) { return this.features.name; }\n    this.features.name = _;\n\n    this.trigger(\"change:name\");\n    if (this.root) { this.draw(this.root); }\n\n    return this;\n  },\n\n\n  colorNodes: function(_) {\n    if (!arguments.length) { return this.features.colorNodes; }\n    this.features.colorNodes = _;\n\n    this.trigger(\"change:color\");\n    if (this.root) { this.draw(this.root); }\n\n    return this;\n  },\n\n\n  colorLinks: function(_) {\n    if (!arguments.length) { return this.features.colorLinks; }\n    this.features.colorLinks = _;\n\n    this.trigger(\"change:color\");\n    if (this.data) { this.draw(this.data); }\n\n    return this;\n  }\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./base.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":[\"d3\",\"chart\"],\"commonjs\":\"d3.chart\",\"commonjs2\":\"d3.chart\",\"amd\":\"d3.chart\"}\n ** module id = 5\n ** module chunks = 0\n **/","\"use strict\";\n/*jshint node: true */\n\nvar Sankey = require('./sankey');\n\n// Sankey diagram with a hoverable selection\nmodule.exports = Sankey.extend(\"Sankey.Selection\", {\n\n  initialize: function() {\n    var chart = this;\n\n    chart.features.selection = null;\n    chart.features.unselectedOpacity = 0.2;\n\n    chart.on(\"link:mouseover\", chart.selection);\n    chart.on(\"link:mouseout\", function() { chart.selection(null); });\n    chart.on(\"node:mouseover\", chart.selection);\n    chart.on(\"node:mouseout\", function() { chart.selection(null); });\n\n    // going through the whole draw cycle can be a little slow, so we use\n    // a selection changed event to update existing nodes directly\n    chart.on(\"change:selection\", updateTransition);\n    this.layer(\"links\").on(\"enter\", update);\n    this.layer(\"nodes\").on(\"enter\", update);\n\n    function update() {\n      /*jshint validthis:true */\n      if (chart.features.selection && chart.features.selection.length) {\n        return this.style(\"opacity\", function(o) {\n          return chart.features.selection.indexOf(o) >= 0 ? 1 : chart.features.unselectedOpacity;\n        });\n      } else {\n        return this.style(\"opacity\", 1);\n      }\n    }\n\n    function updateTransition() {\n      var transition = chart.layers.base.selectAll('.node, .link').transition();\n      if (!chart.features.selection || !chart.features.selection.length) {\n        // short delay for the deselect transition to avoid flicker\n        transition = transition.delay(100);\n      }\n      update.apply(transition.duration(50));\n    }\n  },\n\n  selection: function(_) {\n    if (!arguments.length) { return this.features.selection; }\n    this.features.selection = (!_ || _ instanceof Array) ? _ : [_];\n\n    this.trigger(\"change:selection\");\n\n    return this;\n  },\n\n  unselectedOpacity: function(_) {\n    if (!arguments.length) { return this.features.unselectedOpacity; }\n    this.features.unselectedOpacity = _;\n\n    this.trigger(\"change:selection\");\n\n    return this;\n  }\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./selection.js\n ** module id = 6\n ** module chunks = 0\n **/","\"use strict\";\n/*jshint node: true */\n\nvar Selection = require('./selection');\n\n// Sankey diagram with a path-hover effect\nmodule.exports = Selection.extend(\"Sankey.Path\", {\n\n  selection: function(_) {\n    var chart = this;\n\n    if (!arguments.length) { return chart.features.selection; }\n    chart.features.selection = (!_ || _ instanceof Array) ? _ : [_];\n\n    // expand selection with connections\n    if (chart.features.selection) {\n      chart.features.selection.forEach(function(o) {\n        getConnections(o).forEach(function(p) {\n          chart.features.selection.push(p);\n        });\n      });\n    }\n\n    chart.trigger(\"change:selection\");\n\n    return chart;\n  }\n\n});\n\nfunction getConnections(o, direction) {\n  if (o.source && o.target) {\n    return getConnectionsLink(o, direction);\n  } else {\n    return getConnectionsNode(o, direction);\n  }\n}\n\n// Return the link and its connected nodes with their links etc.\nfunction getConnectionsLink(o, direction) {\n  var links = [o];\n  direction = direction || 'both';\n\n  if (direction == 'source' || direction == 'both') {\n    links = links.concat(getConnectionsNode(o.source, 'source'));\n  }\n  if (direction == 'target' || direction == 'both') {\n    links = links.concat(getConnectionsNode(o.target, 'target'));\n  }\n\n  return links;\n}\n\n// Return the node and its connected links. If direction is 'both', just return\n// all links; if direction is 'source', only return the source link when there\n// is one target link (or none, in which case the node is an endnode); if\n// direction is 'target' vice versa. Open the product example to see why.\nfunction getConnectionsNode(o, direction) {\n  var links = [o];\n  direction = direction || 'both';\n\n  if ((direction == 'source' && o.sourceLinks.length < 2) || direction == 'both') {\n    o.targetLinks.forEach(function(p) { links = links.concat(getConnectionsLink(p, direction)); });\n  }\n  if ((direction == 'target' && o.targetLinks.length < 2) || direction == 'both') {\n    o.sourceLinks.forEach(function(p) { links = links.concat(getConnectionsLink(p, direction)); });\n  }\n\n  return links;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./path.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}